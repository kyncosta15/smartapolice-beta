import { useState, useEffect } from 'react';
import { useToast } from '@/hooks/use-toast';
import { supabase } from '@/integrations/supabase/client';

/**
 * Hook para sincronizar ap√≥lices do InfoCap automaticamente ao login
 */
export function useInfoCapSync() {
  const [isSyncing, setIsSyncing] = useState(false);
  const [lastSyncDate, setLastSyncDate] = useState<Date | null>(null);
  const { toast } = useToast();

  const syncPolicies = async (documento: string) => {
    if (!documento || isSyncing) return;

    try {
      setIsSyncing(true);
      console.log('üîÑ Iniciando sincroniza√ß√£o InfoCap...');

      // Chamar edge function
      const { data, error } = await supabase.functions.invoke('sync-infocap', {
        body: { documento },
      });

      if (error) throw error;

      setLastSyncDate(new Date());

      if (data?.synced > 0) {
        toast({
          title: "Ap√≥lices Sincronizadas",
          description: `${data.synced} ap√≥lice(s) do InfoCap foram importadas.`,
          duration: 5000,
        });
      } else {
        console.log('‚ÑπÔ∏è Nenhuma ap√≥lice nova encontrada');
      }

      return data;
    } catch (error) {
      console.error('‚ùå Erro na sincroniza√ß√£o InfoCap:', error);
      toast({
        title: "Erro na Sincroniza√ß√£o",
        description: "N√£o foi poss√≠vel sincronizar as ap√≥lices do InfoCap.",
        variant: "destructive",
        duration: 5000,
      });
      throw error;
    } finally {
      setIsSyncing(false);
    }
  };

  // Sincronizar automaticamente quando houver um usu√°rio
  useEffect(() => {
    const checkAndSync = async () => {
      try {
        // Verificar se h√° uma sess√£o ativa
        const { data: { session } } = await supabase.auth.getSession();
        if (!session) {
          console.log('‚ö†Ô∏è Nenhuma sess√£o ativa - pulando sincroniza√ß√£o');
          return;
        }

        const { data: { user } } = await supabase.auth.getUser();
        if (!user) {
          console.log('‚ö†Ô∏è Usu√°rio n√£o encontrado - pulando sincroniza√ß√£o');
          return;
        }

        // Buscar documento do usu√°rio na tabela users
        const { data: userData } = await supabase
          .from('users')
          .select('documento')
          .eq('id', user.id)
          .maybeSingle();

        if (userData?.documento) {
          console.log('üîç Documento encontrado:', userData.documento);
          await syncPolicies(userData.documento);
        } else {
          console.log('‚ö†Ô∏è Usu√°rio sem documento cadastrado - sincroniza√ß√£o InfoCap n√£o dispon√≠vel');
        }
      } catch (error) {
        console.error('‚ùå Erro ao verificar sess√£o:', error);
      }
    };

    checkAndSync();
  }, []);

  return {
    isSyncing,
    lastSyncDate,
    syncPolicies,
  };
}

